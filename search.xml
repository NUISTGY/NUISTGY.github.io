<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>numpy数组和python列表的区别</title>
      <link href="/2019/07/11/numpy%E6%95%B0%E7%BB%84%E5%92%8Cpython%E5%88%97%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/07/11/numpy%E6%95%B0%E7%BB%84%E5%92%8Cpython%E5%88%97%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol><li><p>numpy数组创建时是固定大小，python数组（list）是动态的。更改ndarray的大小将创建一个新数组并删除原来的数组。</p></li><li><p>元素类型区别。</p></li><li><p>NumPy数组中的元素都需要具有相同的数据类型，因此在内存中的大小相同。</p></li><li><p>python的List可以存放不同类型的元素。</p></li><li><p>例外情况：Python的原生数组里包含了NumPy的对象的时候，这种情况下就允许不同大小元素的数组。</p></li><li><p>数学操作执行效率高于原生python</p></li><li><p>越来越多的基于Python的科学和数学软件包使用NumPy数组</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感知机初识</title>
      <link href="/2019/07/10/%E6%84%9F%E7%9F%A5%E6%9C%BA%E5%88%9D%E8%AF%86/"/>
      <url>/2019/07/10/%E6%84%9F%E7%9F%A5%E6%9C%BA%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="感知机（perceptron"><a href="#感知机（perceptron" class="headerlink" title="感知机（perceptron)"></a>感知机（perceptron)</h1><p>感知机是神经网络（深度学习）的起源算法，学习感知机的构造是通向神经网络和深度学习的一种重要思想。</p><blockquote><p>严格讲，应该称为“人工神经元”或“朴素感知机”，但是因为很多基本的处理都是共通的，所以这里就简单地称为“感知机”。</p></blockquote><h2 id="原理简介："><a href="#原理简介：" class="headerlink" title="原理简介："></a>原理简介：</h2><p>感知机接收多个输入信号，输出一个信号。<br>这里所说的“信号”可以想 象成电流或河流那样具备“<strong>流动性</strong>”的东西。<br>像电流流过导线，向前方输送 电子一样，感知机的信号也会形成流，向前方输送信息。<br>但是，和实际的电 流不同的是，感知机的信号只有<strong>“流/不流”（1/0）</strong>两种取值。<br>0 对应“不传递信号”，1对应“传递信号”。</p><p><img src="http://a3.qpic.cn/psb?/V14eJTFY48iu60/HhL0bbMh2F4NbR3pvHQa*nqBW8y.PZFTiByQEwfgucA!/c/dN4AAAAAAAAA&ek=1&kp=1&pt=0&bo=4QJdAeECXQEDGTw!&tl=1&vuin=1328447669&tm=1562738400&sce=60-2-2&rf=0-0" alt="net" title="markdown"></p><p><strong>如图</strong></p><ul><li>x<sub>1</sub> 、x<sub>2</sub>是输入信号，</li><li>y 是输出信号，</li><li>w<sub>1</sub>、w<sub>2</sub>是权重 （w 是 weight 的首字母）。</li><li>图中的○称为“神经元”或者“节点”。</li><li>输入信号被送往神经元时，会被分别乘以固定的权重（w<sub>1</sub> x<sub>1</sub> , w<sub>2</sub> x<sub>2</sub> ）。</li><li>神经元会计算传送过来的信号的总和，只有当这个总和超过 了某个界限值时，才会输出1（这也称为“神经元被激活）。</li><li>这里将这个界限值称为阈值，用符号θ表示。</li></ul><p><img src="http://a3.qpic.cn/psb?/V14eJTFY137vJk/Jb9LnAgcqtwC7udEtAvxtUYaeAQmdphrXHM8w98K9MQ!/b/dIoBAAAAAAAA&ek=1&kp=1&pt=0&bo=pAc*AqQHPwIRGS4!&tl=3&vuin=1328447669&tm=1562742000&sce=60-4-3&rf=viewer_4&t=5" alt="公式" title="公式"></p><p>感知机的多个输入信号都有各自固有的权重，这些权重发挥着控制各个 信号的重要性的作用。也就是说，权重越大，对应该权重的信号的重要性就越高。<br>权重：相当于电流里的电阻。电阻是决定电流流动难度的参数， 电阻越低，通过的电流就越大。<br>而感知机的权重则是值越大，通过的信号就越大。<br>不管是电阻还是权重，在控制信号流动难度（或者流 动容易度）这一点上的作用都是一样的。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感知机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/09/hello-world/"/>
      <url>/2019/07/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
