<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MNIST数据集的下载与数据处理</title>
      <link href="/2019/07/12/mnist%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%A4%84%E7%90%86/"/>
      <url>/2019/07/12/mnist%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="源码（python）"><a href="#源码（python）" class="headerlink" title="源码（python）"></a>源码（python）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"># coding: utf-8</span><br><span class="line">try:</span><br><span class="line">    import urllib.request</span><br><span class="line">except ImportError:</span><br><span class="line">    raise ImportError(&apos;You should use Python 3.x&apos;)</span><br><span class="line">import os.path</span><br><span class="line">import gzip</span><br><span class="line">import pickle</span><br><span class="line">import os</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url_base = &apos;http://yann.lecun.com/exdb/mnist/&apos;</span><br><span class="line">key_file = &#123;</span><br><span class="line">    &apos;train_img&apos;:&apos;train-images-idx3-ubyte.gz&apos;,</span><br><span class="line">    &apos;train_label&apos;:&apos;train-labels-idx1-ubyte.gz&apos;,</span><br><span class="line">    &apos;test_img&apos;:&apos;t10k-images-idx3-ubyte.gz&apos;,</span><br><span class="line">    &apos;test_label&apos;:&apos;t10k-labels-idx1-ubyte.gz&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dataset_dir = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">save_file = dataset_dir + &quot;/mnist.pkl&quot;</span><br><span class="line"></span><br><span class="line">train_num = 60000</span><br><span class="line">test_num = 10000</span><br><span class="line">img_dim = (1, 28, 28)</span><br><span class="line">img_size = 784</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _download(file_name):</span><br><span class="line">    file_path = dataset_dir + &quot;/&quot; + file_name</span><br><span class="line">    </span><br><span class="line">    if os.path.exists(file_path):</span><br><span class="line">        return</span><br><span class="line"></span><br><span class="line">    print(&quot;Downloading &quot; + file_name + &quot; ... &quot;)</span><br><span class="line">    urllib.request.urlretrieve(url_base + file_name, file_path)</span><br><span class="line">    print(&quot;Done&quot;)</span><br><span class="line">    </span><br><span class="line">def download_mnist():</span><br><span class="line">    for v in key_file.values():</span><br><span class="line">       _download(v)</span><br><span class="line">        </span><br><span class="line">def _load_label(file_name):</span><br><span class="line">    file_path = dataset_dir + &quot;/&quot; + file_name</span><br><span class="line">    </span><br><span class="line">    print(&quot;Converting &quot; + file_name + &quot; to NumPy Array ...&quot;)</span><br><span class="line">    with gzip.open(file_path, &apos;rb&apos;) as f:</span><br><span class="line">            labels = np.frombuffer(f.read(), np.uint8, offset=8)</span><br><span class="line">    print(&quot;Done&quot;)</span><br><span class="line">    </span><br><span class="line">    return labels</span><br><span class="line"></span><br><span class="line">def _load_img(file_name):</span><br><span class="line">    file_path = dataset_dir + &quot;/&quot; + file_name</span><br><span class="line">    </span><br><span class="line">    print(&quot;Converting &quot; + file_name + &quot; to NumPy Array ...&quot;)    </span><br><span class="line">    with gzip.open(file_path, &apos;rb&apos;) as f:</span><br><span class="line">            data = np.frombuffer(f.read(), np.uint8, offset=16)</span><br><span class="line">    data = data.reshape(-1, img_size)</span><br><span class="line">    print(&quot;Done&quot;)</span><br><span class="line">    </span><br><span class="line">    return data</span><br><span class="line">    </span><br><span class="line">def _convert_numpy():</span><br><span class="line">    dataset = &#123;&#125;</span><br><span class="line">    dataset[&apos;train_img&apos;] =  _load_img(key_file[&apos;train_img&apos;])</span><br><span class="line">    dataset[&apos;train_label&apos;] = _load_label(key_file[&apos;train_label&apos;])    </span><br><span class="line">    dataset[&apos;test_img&apos;] = _load_img(key_file[&apos;test_img&apos;])</span><br><span class="line">    dataset[&apos;test_label&apos;] = _load_label(key_file[&apos;test_label&apos;])</span><br><span class="line">    </span><br><span class="line">    return dataset</span><br><span class="line"></span><br><span class="line">def init_mnist():</span><br><span class="line">    download_mnist()</span><br><span class="line">    dataset = _convert_numpy()</span><br><span class="line">    print(&quot;Creating pickle file ...&quot;)</span><br><span class="line">    with open(save_file, &apos;wb&apos;) as f:</span><br><span class="line">        pickle.dump(dataset, f, -1)</span><br><span class="line">    print(&quot;Done!&quot;)</span><br><span class="line"></span><br><span class="line">def _change_one_hot_label(X):</span><br><span class="line">    T = np.zeros((X.size, 10))</span><br><span class="line">    for idx, row in enumerate(T):</span><br><span class="line">        row[X[idx]] = 1</span><br><span class="line">        </span><br><span class="line">    return T</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">def load_mnist(normalize=True, flatten=True, one_hot_label=False):</span><br><span class="line">    &quot;&quot;&quot;读入MNIST数据集</span><br><span class="line">    </span><br><span class="line">    Parameters</span><br><span class="line">    ----------</span><br><span class="line">    normalize : 将图像的像素值正规化为0.0~1.0</span><br><span class="line">    one_hot_label : </span><br><span class="line">        one_hot_label为True的情况下，标签作为one-hot数组返回</span><br><span class="line">        one-hot数组是指[0,0,1,0,0,0,0,0,0,0]这样的数组</span><br><span class="line">    flatten : 是否将图像展开为一维数组</span><br><span class="line">    </span><br><span class="line">    Returns</span><br><span class="line">    -------</span><br><span class="line">    (训练图像, 训练标签), (测试图像, 测试标签)</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not os.path.exists(save_file):</span><br><span class="line">        init_mnist()</span><br><span class="line">        </span><br><span class="line">    with open(save_file, &apos;rb&apos;) as f:</span><br><span class="line">        dataset = pickle.load(f)</span><br><span class="line">    </span><br><span class="line">    if normalize:</span><br><span class="line">        for key in (&apos;train_img&apos;, &apos;test_img&apos;):</span><br><span class="line">            dataset[key] = dataset[key].astype(np.float32)</span><br><span class="line">            dataset[key] /= 255.0</span><br><span class="line">            </span><br><span class="line">    if one_hot_label:</span><br><span class="line">        dataset[&apos;train_label&apos;] = _change_one_hot_label(dataset[&apos;train_label&apos;])</span><br><span class="line">        dataset[&apos;test_label&apos;] = _change_one_hot_label(dataset[&apos;test_label&apos;])</span><br><span class="line">    </span><br><span class="line">    if not flatten:</span><br><span class="line">         for key in (&apos;train_img&apos;, &apos;test_img&apos;):</span><br><span class="line">            dataset[key] = dataset[key].reshape(-1, 1, 28, 28)</span><br><span class="line"></span><br><span class="line">    return (dataset[&apos;train_img&apos;], dataset[&apos;train_label&apos;]), (dataset[&apos;test_img&apos;], dataset[&apos;test_label&apos;]) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    init_mnist()</span><br></pre></td></tr></table></figure><h2 id="load-mnist函数讲解"><a href="#load-mnist函数讲解" class="headerlink" title="load_mnist函数讲解"></a>load_mnist函数讲解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">def load_mnist(normalize=True, flatten=True, one_hot_label=False):</span><br><span class="line">    &quot;&quot;&quot;读入MNIST数据集</span><br><span class="line">    </span><br><span class="line">    Parameters</span><br><span class="line">    ----------</span><br><span class="line">    normalize : 将图像的像素值正规化为0.0~1.0</span><br><span class="line">    one_hot_label : </span><br><span class="line">        one_hot_label为True的情况下，标签作为one-hot数组返回</span><br><span class="line">        one-hot数组是指[0,0,1,0,0,0,0,0,0,0]这样的数组</span><br><span class="line">    flatten : 是否将图像展开为一维数组</span><br><span class="line">    </span><br><span class="line">    Returns</span><br><span class="line">    -------</span><br><span class="line">    (训练图像, 训练标签), (测试图像, 测试标签)</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not os.path.exists(save_file):</span><br><span class="line">        init_mnist()</span><br><span class="line">        </span><br><span class="line">    with open(save_file, &apos;rb&apos;) as f:</span><br><span class="line">        dataset = pickle.load(f)</span><br><span class="line">    </span><br><span class="line">    if normalize:</span><br><span class="line">        for key in (&apos;train_img&apos;, &apos;test_img&apos;):</span><br><span class="line">            dataset[key] = dataset[key].astype(np.float32)</span><br><span class="line">            dataset[key] /= 255.0</span><br><span class="line">            </span><br><span class="line">    if one_hot_label:</span><br><span class="line">        dataset[&apos;train_label&apos;] = _change_one_hot_label(dataset[&apos;train_label&apos;])</span><br><span class="line">        dataset[&apos;test_label&apos;] = _change_one_hot_label(dataset[&apos;test_label&apos;])</span><br><span class="line">    </span><br><span class="line">    if not flatten:</span><br><span class="line">         for key in (&apos;train_img&apos;, &apos;test_img&apos;):</span><br><span class="line">            dataset[key] = dataset[key].reshape(-1, 1, 28, 28)</span><br><span class="line"></span><br><span class="line">    return (dataset[&apos;train_img&apos;], dataset[&apos;train_label&apos;]), (dataset[&apos;test_img&apos;], dataset[&apos;test_label&apos;])</span><br></pre></td></tr></table></figure><p>load_mnist函数以<strong>“(训练图像,训练标签),(测试图像,测试标签)”</strong>的<br>形式返回读入的MNIST数据。<br>此外,还可以像<strong>load_mnist(normalize=True,flatten=True,one_hot_label=False)</strong>这样,设置3个参数。</p><ul><li>第1个参数normalize设置是否将输入图像正规化为0.0<del>1.0的值。如果将该参数设置为 False,则输入图像的像素会保持原来的0</del>255。</li><li>第2个参数 flatten设置是否展开输入图像(变成一维数组)。如果将该参数设置为 False,则输入图像为1×28×28的三维数组;若设置为True,则输入图像会保存为由784个元素构成的一维数组。</li><li>第3个参数one_hot_label设置是否将标签保存为one-hot表示(one-hot representation)。one-hot表示是仅正确解标签为1,其余皆为0的数组,就像[0,0,1,0,0,0,0,0,0,0]这样。当one_hot_label为Fase时,只是像7、2这样简单保存正确解标签;当 one_hot_label为True时,标签则保存为one-hot表示。</li></ul><blockquote><p>PS:想获取完整的手写数字识别源码请访问我的GitHub：<br><a href="https://github.com/NUISTGY/Codes-of-fish-book.git" target="_blank" rel="noopener">https://github.com/NUISTGY/Codes-of-fish-book.git</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 数据集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 手写识别 </tag>
            
            <tag> MNIST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是MNIST 数据集</title>
      <link href="/2019/07/12/mnist%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/"/>
      <url>/2019/07/12/mnist%E6%95%B0%E6%8D%AE%E9%9B%86%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>MNIST 数据集已经是一个被”嚼烂”了的数据集, 很多教程都会对它”下手”, 几乎成为一个 “典范”. 不过有些人可能对它还不是很了解, 下面来介绍一下.</strong></p><p><img src="http://m.qpic.cn/psb?/V14eJTFY137vJk/FqQaq.BD0UAhxFhRh0JtDLzteoHOs5pn5LEBVCQbD5c!/b/dN0AAAAAAAAA&bo=TgKGAU4ChgEDCSw!&rf=viewer_4&t=5" alt="手写数字" title="手写数字"></p><p>MNIST 数据集可在 <a href="http://yann.lecun.com/exdb/mnist/" target="_blank" rel="noopener">http://yann.lecun.com/exdb/mnist/</a> 获取, 它包含了四个部分:</p><ul><li>Training set images: train-images-idx3-ubyte.gz (9.9 MB, 解压后 47 MB, 包含 60,000 个样本)</li><li>Training set labels: train-labels-idx1-ubyte.gz (29 KB, 解压后 60 KB, 包含 60,000 个标签)</li><li>Test set images: t10k-images-idx3-ubyte.gz (1.6 MB, 解压后 7.8 MB, 包含 10,000 个样本)</li><li>Test set labels: t10k-labels-idx1-ubyte.gz (5KB, 解压后 10 KB, 包含 10,000 个标签)</li></ul><p><img src="http://m.qpic.cn/psb?/V14eJTFY137vJk/SrI8491l5bwJXBtkBhwDhoXuXHej.0uabkMwozlJ6S0!/b/dPQAAAAAAAAA&bo=2AQiAdgEIgEDCSw!&rf=viewer_4&t=5" alt="解压后" title="解压后"></p><p>MNIST 数据集来自美国国家标准与技术研究所, National Institute of Standards and Technology (NIST). 训练集 (training set) 由来自 250 个不同人手写的数字构成, 其中 50% 是高中学生, 50% 来自人口普查局 (the Census Bureau) 的工作人员. 测试集(test set) 也是同样比例的手写数字数据.</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 数据集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手写识别 </tag>
            
            <tag> MNIST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的3层神经网络实现</title>
      <link href="/2019/07/11/%E7%AE%80%E5%8D%95%E7%9A%843%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0/"/>
      <url>/2019/07/11/%E7%AE%80%E5%8D%95%E7%9A%843%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="使用sigmoid作为激活函数的极简3层神经网络-前向-范例"><a href="#使用sigmoid作为激活函数的极简3层神经网络-前向-范例" class="headerlink" title="使用sigmoid作为激活函数的极简3层神经网络(前向)范例"></a>使用sigmoid作为激活函数的极简3层神经网络(前向)范例</h2><h3 id="导入numpy库"><a href="#导入numpy库" class="headerlink" title="导入numpy库"></a>导入numpy库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h3 id="定义sigmoid函数"><a href="#定义sigmoid函数" class="headerlink" title="定义sigmoid函数"></a>定义sigmoid函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>/(<span class="number">1</span>+np.exp(-x))</span><br></pre></td></tr></table></figure><h3 id="初始化神经网络"><a href="#初始化神经网络" class="headerlink" title="初始化神经网络"></a>初始化神经网络</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_network</span><span class="params">()</span>:</span></span><br><span class="line">    network=&#123;&#125;</span><br><span class="line">    network[<span class="string">'w1'</span>]=np.array([[<span class="number">0.1</span>,<span class="number">0.3</span>,<span class="number">0.5</span>],[<span class="number">0.2</span>,<span class="number">0.4</span>,<span class="number">0.6</span>]])</span><br><span class="line">    network[<span class="string">'w2'</span>]=np.array([[<span class="number">0.1</span>,<span class="number">0.4</span>],[<span class="number">0.2</span>,<span class="number">0.5</span>],[<span class="number">0.3</span>,<span class="number">0.6</span>]])</span><br><span class="line">    network[<span class="string">'w3'</span>]=np.array([[<span class="number">0.1</span>,<span class="number">0.3</span>],[<span class="number">0.2</span>,<span class="number">0.4</span>]])</span><br><span class="line">    network[<span class="string">'b1'</span>]=np.array([<span class="number">0.1</span>,<span class="number">0.2</span>,<span class="number">0.3</span>])</span><br><span class="line">    network[<span class="string">'b2'</span>]=np.array([<span class="number">0.1</span>,<span class="number">0.2</span>])</span><br><span class="line">    network[<span class="string">'b3'</span>]=np.array([<span class="number">0.1</span>,<span class="number">0.2</span>])</span><br><span class="line">    <span class="keyword">return</span> network</span><br></pre></td></tr></table></figure><h3 id="定义神经网络"><a href="#定义神经网络" class="headerlink" title="定义神经网络"></a>定义神经网络</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(network,x)</span>:</span></span><br><span class="line">    w1,w2,w3=network[<span class="string">'w1'</span>],network[<span class="string">'w2'</span>],network[<span class="string">'w3'</span>]</span><br><span class="line">    b1,b2,b3=network[<span class="string">'b1'</span>],network[<span class="string">'b2'</span>],network[<span class="string">'b3'</span>]</span><br><span class="line">    </span><br><span class="line">    a1=np.dot(x,w1)+b1</span><br><span class="line">    z1=sigmoid(a1)</span><br><span class="line">    a2=np.dot(z1,w2)+b2</span><br><span class="line">    z2=sigmoid(a2)</span><br><span class="line">    a3=np.dot(z2,w3)+b3</span><br><span class="line">    y=a3</span><br><span class="line">    <span class="keyword">return</span> y</span><br></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">network=init_network()</span><br><span class="line">x=np.array([<span class="number">1.0</span>,<span class="number">0.5</span>])</span><br><span class="line">y=forward(network,x)</span><br><span class="line">print(y)<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psb?/V14eJTFY137vJk/22kQwx1Jpk4jhWu*qsEKh5DPm8owKdu5hSgq66W0G80!/b/dD0BAAAAAAAA&bo=DQlABuYKhwcRCRA!&rf=viewer_4&t=5" alt="神经网络" title="神经网络"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy数组和python列表的区别</title>
      <link href="/2019/07/11/numpy%E6%95%B0%E7%BB%84%E5%92%8Cpython%E5%88%97%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/07/11/numpy%E6%95%B0%E7%BB%84%E5%92%8Cpython%E5%88%97%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol><li><p>numpy数组创建时是固定大小，python数组（list）是动态的。更改ndarray的大小将创建一个新数组并删除原来的数组。</p></li><li><p>元素类型区别。</p></li><li><p>NumPy数组中的元素都需要具有相同的数据类型，因此在内存中的大小相同。</p></li><li><p>python的List可以存放不同类型的元素。</p></li><li><p>例外情况：Python的原生数组里包含了NumPy的对象的时候，这种情况下就允许不同大小元素的数组。</p></li><li><p>数学操作执行效率高于原生python</p></li><li><p>越来越多的基于Python的科学和数学软件包使用NumPy数组</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感知机初识</title>
      <link href="/2019/07/10/%E6%84%9F%E7%9F%A5%E6%9C%BA%E5%88%9D%E8%AF%86/"/>
      <url>/2019/07/10/%E6%84%9F%E7%9F%A5%E6%9C%BA%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="感知机（perceptron"><a href="#感知机（perceptron" class="headerlink" title="感知机（perceptron)"></a>感知机（perceptron)</h1><p>感知机是神经网络（深度学习）的起源算法，学习感知机的构造是通向神经网络和深度学习的一种重要思想。</p><blockquote><p>严格讲，应该称为“人工神经元”或“朴素感知机”，但是因为很多基本的处理都是共通的，所以这里就简单地称为“感知机”。</p></blockquote><h2 id="原理简介："><a href="#原理简介：" class="headerlink" title="原理简介："></a>原理简介：</h2><p>感知机接收多个输入信号，输出一个信号。<br>这里所说的“信号”可以想 象成电流或河流那样具备“<strong>流动性</strong>”的东西。<br>像电流流过导线，向前方输送 电子一样，感知机的信号也会形成流，向前方输送信息。<br>但是，和实际的电 流不同的是，感知机的信号只有<strong>“流/不流”（1/0）</strong>两种取值。<br>0 对应“不传递信号”，1对应“传递信号”。</p><p><img src="http://a3.qpic.cn/psb?/V14eJTFY48iu60/HhL0bbMh2F4NbR3pvHQa*nqBW8y.PZFTiByQEwfgucA!/c/dN4AAAAAAAAA&ek=1&kp=1&pt=0&bo=4QJdAeECXQEDGTw!&tl=1&vuin=1328447669&tm=1562738400&sce=60-2-2&rf=0-0" alt="net" title="markdown"></p><p><strong>如图</strong></p><ul><li>x<sub>1</sub> 、x<sub>2</sub>是输入信号，</li><li>y 是输出信号，</li><li>w<sub>1</sub>、w<sub>2</sub>是权重 （w 是 weight 的首字母）。</li><li>图中的○称为“神经元”或者“节点”。</li><li>输入信号被送往神经元时，会被分别乘以固定的权重（w<sub>1</sub> x<sub>1</sub> , w<sub>2</sub> x<sub>2</sub> ）。</li><li>神经元会计算传送过来的信号的总和，只有当这个总和超过 了某个界限值时，才会输出1（这也称为“神经元被激活）。</li><li>这里将这个界限值称为阈值，用符号θ表示。</li></ul><p><img src="http://a3.qpic.cn/psb?/V14eJTFY137vJk/Jb9LnAgcqtwC7udEtAvxtUYaeAQmdphrXHM8w98K9MQ!/b/dIoBAAAAAAAA&ek=1&kp=1&pt=0&bo=pAc*AqQHPwIRGS4!&tl=3&vuin=1328447669&tm=1562742000&sce=60-4-3&rf=viewer_4&t=5" alt="公式" title="公式"></p><p>感知机的多个输入信号都有各自固有的权重，这些权重发挥着控制各个 信号的重要性的作用。也就是说，权重越大，对应该权重的信号的重要性就越高。<br>权重：相当于电流里的电阻。电阻是决定电流流动难度的参数， 电阻越低，通过的电流就越大。<br>而感知机的权重则是值越大，通过的信号就越大。<br>不管是电阻还是权重，在控制信号流动难度（或者流 动容易度）这一点上的作用都是一样的。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感知机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/09/hello-world/"/>
      <url>/2019/07/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
